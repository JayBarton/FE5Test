#version 330 core
out vec4 color;

uniform vec3 shapeColor;
uniform vec3 sideColor;
uniform float alpha;
uniform float t;
uniform vec2 offset;

in vec2 vertexPos;

float dDistance(vec2 v1, vec2 v2, vec2 dir)
{
	//Some weirdness going on here on the first pass of the animation
    vec2 diff = v1 - v2;
    return dot(normalize(dir), diff);
}

void main()
{
	if(vertexPos.x > 0.95f || vertexPos.y > 0.95f)
	{
		color = vec4(sideColor, 0.7f);
	}
	else
	{
		float d = mod(floor(dDistance(vertexPos.xy, offset, vec2(-1.0f, 1.0f)) * 6.0) / 6.0, 2.0);
	    if(d > 1.0f)
		{
			d = 2.0f - d;
		}
		color = vec4(shapeColor, alpha);
		d/= 4.0f;
		color.rgb -= d;	
	}
}