#version 330 core
in vec2 TextureCoordinates;
out vec4 color;

uniform sampler2D image;
uniform vec2 stepSize;
uniform vec4 spriteColor;
uniform vec4 bounds;

vec4 outline( sampler2D texture, vec2 texturePos);

void main()
{    
   color = vec4(outline(image, TextureCoordinates));
}  

vec4 outline( sampler2D texture, vec2 texturePos )
{
	vec4 outline;
    
	vec3 inColor = texture2D( texture, texturePos ).rgb;
	
	/*float alpha = texture2D( texture, texturePos ).a;
	if(alpha >= 1)
	{
		alpha = 0;
	}
	else
	{
		float down = texturePos.y + stepSize.y;
		float up = texturePos.y - stepSize.y;
		alpha += texture2D( texture, texturePos + vec2( stepSize.x, 0.0f ) ).a;
		alpha += texture2D( texture, texturePos + vec2( -stepSize.x, 0.0f ) ).a;
	//	if(down < bounds.w)
		{
			alpha += texture2D( texture, texturePos + vec2( 0.0f, stepSize.y ) ).a;
		}
	//	if(up > bounds.y)
		{
			alpha += texture2D( texture, texturePos + vec2( 0.0f, -stepSize.y ) ).a;
		}
	}*/
	float factor = -1;
	float aFactor = 0;
	if(inColor == vec3(1, 0, 0))
	{	
		aFactor = 0.1f;
		factor = 1.0f;
	//    outline = vec4( 0, 0, 1, 0.8 );
	}
	else if(inColor == vec3(0, 1, 0))
	{	
		aFactor = 0.2f;
		factor = 0.5f;
	//    outline = vec4( 0, 0, 1, 0.6 );
	}
	else if (inColor == vec3(0, 0, 1))
	{
		aFactor = 0.3f;
		factor = 0.1f;
	//    outline = vec4( 0, 0, 1, 0.4 );
	}
	else
	{
	//	outline = vec4( inColor, 1 );
	}
	if(factor >= 0)
	{
		//Blue
		outline = vec4(mix(vec3(0, 0.0313, 0.564), vec3(0.345f, 0.5647f, 0.9098f), factor), spriteColor.a - aFactor);
	//	outline = vec4(mix(vec3(0.2823, 0, 0.0), vec3(0.9725, 0.2509f, 0.6274f), factor), spriteColor.a - aFactor);
	}
    return outline;
}